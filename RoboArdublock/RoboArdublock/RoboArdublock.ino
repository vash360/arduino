#include <SoftwareSerial.h>
#include <Servo.h>

SoftwareSerial mySerial(6,7);
int Count = 0 ;
void MoteurGauche();
Servo servo_pin_10;
void Avance();
void InterpreteBlueTooth();
int BT = 0 ;
bool AfficheBT= false ;
int LireBlueTooth();
char BTChar = ' ' ;
bool AfficheCount= false ;
void Stop();
void Test();
void Recule();
int LireDistance();
int Distance = 0 ;
int ardublockUltrasonicSensorCodeAutoGeneratedReturnCM(int trigPin, int echoPin)
{
  long duration;
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(20);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  duration = duration / 59;
  if ((duration < 2) || (duration > 300)) return false;
  return duration;
}

bool AfficheDist= false ;
boolean LireLigne();
bool Ligne= false ;
bool AfficheLigne= false ;
void TourneDroite();
void TourneGauche();
void MoteurDroit();
Servo servo_pin_9;

void setup()
{
  pinMode( 3 , INPUT);
  mySerial.begin(9600);

  servo_pin_10.attach(10);
  Serial.begin(9600);
  digitalWrite( 4 , LOW );

  servo_pin_9.attach(9);

  Count = 0 ;

}

void loop()
{
  InterpreteBlueTooth();
  LireDistance();
}

void MoteurGauche(int Vitesse)
{
  servo_pin_10.write( Vitesse );
}

void Avance()
{
  MoteurGauche(179);
  MoteurDroit(0);
}

void InterpreteBlueTooth()
{
  BT = LireBlueTooth() ;
  AfficheBT = LOW ;
  if (AfficheBT)
  {
    Serial.print(BT);
    Serial.println();
  }
  if (( ( BT ) == ( 66 ) ))
  {
    Recule();
  }
  else
  {
    if (( ( BT ) == ( 70 ) ))
    {
      Avance();
    }
    else
    {
      if (( ( BT ) == ( 76 ) ))
      {
        TourneGauche();
      }
      else
      {
        if (( ( BT ) == ( 82 ) ))
        {
          TourneDroite();
        }
        else
        {
          Stop();
        }
      }
    }
  }
}

int LireBlueTooth()
{
  if (mySerial.available())
  {
    BTChar = mySerial.read();
    Count = 0 ;
  }
  else
  {
    Count = ( Count + 1 ) ;
    if (( ( Count ) > ( 10 ) ))
    {
      BTChar = 'S';
      Count = 0 ;
    }
  }
  AfficheCount = LOW ;
  if (AfficheCount)
  {
    Serial.print(Count);
    Serial.println();
  }
  return BTChar;
}

void Stop()
{
  MoteurGauche(95);
  MoteurDroit(95);
}

void Test()
{
  TourneDroite();
  delay( 1000 );
  TourneGauche();
  delay( 1000 );
  Avance();
  delay( 1000 );
  Recule();
  delay( 1000 );
}

void Recule()
{
  MoteurGauche(0);
  MoteurDroit(179);
}

int LireDistance()
{
  Distance = 	ardublockUltrasonicSensorCodeAutoGeneratedReturnCM( 4 , 3 ) ;
  AfficheDist = HIGH ;
  if (AfficheDist)
  {
    Serial.print(Distance);
    Serial.println();
  }
  return Distance;
}

boolean LireLigne()
{
  Ligne = digitalRead(3) ;
  AfficheLigne = LOW ;
  if (AfficheLigne)
  {
    Serial.print(Ligne);
    Serial.println();
  }
  return Ligne;
}

void TourneDroite()
{
  MoteurGauche(179);
  MoteurDroit(179);
}

void TourneGauche()
{
  MoteurGauche(0);
  MoteurDroit(0);
}

void MoteurDroit(int Vitesse)
{
  servo_pin_9.write( Vitesse );
}


